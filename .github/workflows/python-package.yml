name: Python Package

on:
  push:
    branches:
      - main
      - develop
      - dev/**
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.ref_type == 'branch'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install package and linter
        run: |
          python -m pip install --upgrade pip
          pip install ".[lint]"
      - name: Run linter to detect errors
        run: |
          pylint -E --rcfile=./.pylintrc ./manen/
      - name: Run isort to detect incorrectly sorted imports
        run: |
          isort --check-only manen/

  test:
    needs: lint
    if: github.ref_type == 'branch'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[test]"
      - name: Test with pytest
        run: |
          pytest

  build-package:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[deploy]"
      - name: Build package
        run: |
          python setup.py dists
      - name: Check with twine that distributions are OK
        run: |
          twine check --strict dist/*
      - name: Upload distributions artifacts
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: dist

  deploy-package:
    needs: build-package
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Check Tag
        run: |
          if [[ ! ${{ github.ref_name }} =~ ^v([1-9][0-9]*!)?(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\.post(0|[1-9][0-9]*))?(\.dev(0|[1-9][0-9]*))?$ ]];
          then
            exit 1
          fi
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install twine
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Download distributions
        uses: actions/download-artifact@v2
        with:
          name: distributions
          path: dist/
      - name: Upload package to Pypi
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          echo "Uploading to Pypi"
          # twine upload --repository testpypi dist/* --verbose
